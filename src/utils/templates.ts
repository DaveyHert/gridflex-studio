import { LayoutState, LayoutTemplate } from '@/types';

// Default state
export function getDefaultState(): LayoutState {
  return {
    layoutType: 'flexbox',
    flexboxProps: {
      display: 'flex',
      flexDirection: 'row',
      justifyContent: 'flex-start',
      alignItems: 'center',
      flexWrap: 'nowrap',
      gap: '10px',
    },
    gridProps: {
      display: 'grid',
      gridTemplateColumns: 'repeat(3, 1fr)',
      gridTemplateRows: 'repeat(2, 1fr)',
      rowGap: '10px',
      columnGap: '10px',
      justifyItems: 'start',
      alignItems: 'center',
    },
    flexItems: [
      {
        id: '1',
        flexGrow: 0,
        flexShrink: 1,
        flexBasis: 'auto',
        alignSelf: 'auto',
        order: 0,
      },
      {
        id: '2',
        flexGrow: 1,
        flexShrink: 1,
        flexBasis: 'auto',
        alignSelf: 'auto',
        order: 0,
      },
      {
        id: '3',
        flexGrow: 0,
        flexShrink: 1,
        flexBasis: 'auto',
        alignSelf: 'auto',
        order: 0,
      },
    ],
    gridItems: [
      {
        id: '1',
        gridColumnStart: '1',
        gridColumnEnd: '2',
        gridRowStart: '1',
        gridRowEnd: '2',
        justifySelf: 'start',
        alignSelf: 'center',
      },
      {
        id: '2',
        gridColumnStart: '2',
        gridColumnEnd: '3',
        gridRowStart: '1',
        gridRowEnd: '2',
        justifySelf: 'start',
        alignSelf: 'center',
      },
      {
        id: '3',
        gridColumnStart: '3',
        gridColumnEnd: '4',
        gridRowStart: '1',
        gridRowEnd: '3',
        justifySelf: 'start',
        alignSelf: 'center',
      },
      {
        id: '4',
        gridColumnStart: '1',
        gridColumnEnd: '3',
        gridRowStart: '2',
        gridRowEnd: '3',
        justifySelf: 'start',
        alignSelf: 'center',
      },
    ],
  };
}

// Pre-built templates
export const templates: LayoutTemplate[] = [
  {
    id: 'flex-nav',
    name: 'Navbar (Flexbox)',
    description: 'A flexible navigation bar with logo and links',
    state: {
      layoutType: 'flexbox',
      flexboxProps: {
        display: 'flex',
        flexDirection: 'row',
        justifyContent: 'space-between',
        alignItems: 'center',
        flexWrap: 'nowrap',
        gap: '10px',
      },
      gridProps: getDefaultState().gridProps,
      flexItems: [
        {
          id: 'logo',
          flexGrow: 0,
          flexShrink: 0,
          flexBasis: 'auto',
          alignSelf: 'auto',
          order: 0,
        },
        {
          id: 'spacer',
          flexGrow: 1,
          flexShrink: 1,
          flexBasis: 'auto',
          alignSelf: 'auto',
          order: 0,
        },
        {
          id: 'nav-1',
          flexGrow: 0,
          flexShrink: 0,
          flexBasis: 'auto',
          alignSelf: 'auto',
          order: 0,
        },
        {
          id: 'nav-2',
          flexGrow: 0,
          flexShrink: 0,
          flexBasis: 'auto',
          alignSelf: 'auto',
          order: 0,
        },
        {
          id: 'nav-3',
          flexGrow: 0,
          flexShrink: 0,
          flexBasis: 'auto',
          alignSelf: 'auto',
          order: 0,
        },
      ],
      gridItems: getDefaultState().gridItems,
    },
  },
  {
    id: 'flex-cards',
    name: 'Card Layout (Flexbox)',
    description: 'Responsive card layout that wraps on smaller screens',
    state: {
      layoutType: 'flexbox',
      flexboxProps: {
        display: 'flex',
        flexDirection: 'row',
        justifyContent: 'center',
        alignItems: 'stretch',
        flexWrap: 'wrap',
        gap: '20px',
      },
      gridProps: getDefaultState().gridProps,
      flexItems: [
        {
          id: 'card-1',
          flexGrow: 0,
          flexShrink: 1,
          flexBasis: '250px',
          alignSelf: 'auto',
          order: 0,
        },
        {
          id: 'card-2',
          flexGrow: 0,
          flexShrink: 1,
          flexBasis: '250px',
          alignSelf: 'auto',
          order: 0,
        },
        {
          id: 'card-3',
          flexGrow: 0,
          flexShrink: 1,
          flexBasis: '250px',
          alignSelf: 'auto',
          order: 0,
        },
        {
          id: 'card-4',
          flexGrow: 0,
          flexShrink: 1,
          flexBasis: '250px',
          alignSelf: 'auto',
          order: 0,
        },
      ],
      gridItems: getDefaultState().gridItems,
    },
  },
  {
    id: 'grid-gallery',
    name: 'Image Gallery (Grid)',
    description: 'Dynamic image gallery with different sized elements',
    state: {
      layoutType: 'grid',
      flexboxProps: getDefaultState().flexboxProps,
      gridProps: {
        display: 'grid',
        gridTemplateColumns: 'repeat(4, 1fr)',
        gridTemplateRows: 'auto',
        rowGap: '10px',
        columnGap: '10px',
        justifyItems: 'stretch',
        alignItems: 'stretch',
      },
      flexItems: getDefaultState().flexItems,
      gridItems: [
        {
          id: 'img-1',
          gridColumnStart: '1',
          gridColumnEnd: '3',
          gridRowStart: '1',
          gridRowEnd: '3',
          justifySelf: 'stretch',
          alignSelf: 'stretch',
        },
        {
          id: 'img-2',
          gridColumnStart: '3',
          gridColumnEnd: '5',
          gridRowStart: '1',
          gridRowEnd: '2',
          justifySelf: 'stretch',
          alignSelf: 'stretch',
        },
        {
          id: 'img-3',
          gridColumnStart: '3',
          gridColumnEnd: '4',
          gridRowStart: '2',
          gridRowEnd: '3',
          justifySelf: 'stretch',
          alignSelf: 'stretch',
        },
        {
          id: 'img-4',
          gridColumnStart: '4',
          gridColumnEnd: '5',
          gridRowStart: '2',
          gridRowEnd: '3',
          justifySelf: 'stretch',
          alignSelf: 'stretch',
        },
        {
          id: 'img-5',
          gridColumnStart: '1',
          gridColumnEnd: '2',
          gridRowStart: '3',
          gridRowEnd: '4',
          justifySelf: 'stretch',
          alignSelf: 'stretch',
        },
        {
          id: 'img-6',
          gridColumnStart: '2',
          gridColumnEnd: '5',
          gridRowStart: '3',
          gridRowEnd: '4',
          justifySelf: 'stretch',
          alignSelf: 'stretch',
        },
      ],
    },
  },
  {
    id: 'grid-dashboard',
    name: 'Dashboard Layout (Grid)',
    description: 'A dashboard layout with sidebar and main content areas',
    state: {
      layoutType: 'grid',
      flexboxProps: getDefaultState().flexboxProps,
      gridProps: {
        display: 'grid',
        gridTemplateColumns: '200px 1fr',
        gridTemplateRows: 'auto 1fr auto',
        rowGap: '10px',
        columnGap: '10px',
        justifyItems: 'stretch',
        alignItems: 'stretch',
      },
      flexItems: getDefaultState().flexItems,
      gridItems: [
        {
          id: 'header',
          gridColumnStart: '1',
          gridColumnEnd: '3',
          gridRowStart: '1',
          gridRowEnd: '2',
          justifySelf: 'stretch',
          alignSelf: 'stretch',
        },
        {
          id: 'sidebar',
          gridColumnStart: '1',
          gridColumnEnd: '2',
          gridRowStart: '2',
          gridRowEnd: '3',
          justifySelf: 'stretch',
          alignSelf: 'stretch',
        },
        {
          id: 'main-content',
          gridColumnStart: '2',
          gridColumnEnd: '3',
          gridRowStart: '2',
          gridRowEnd: '3',
          justifySelf: 'stretch',
          alignSelf: 'stretch',
        },
        {
          id: 'footer',
          gridColumnStart: '1',
          gridColumnEnd: '3',
          gridRowStart: '3',
          gridRowEnd: '4',
          justifySelf: 'stretch',
          alignSelf: 'stretch',
        },
      ],
    },
  },
];
